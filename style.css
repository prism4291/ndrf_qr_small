/* --- CSS --- */
body {
    font-family: sans-serif;
    padding: 20px;
    background-color: #f4f4f4;
    display: flex;
    justify-content: center;
    min-height: 100vh;
    box-sizing: border-box;
}

.container {
    max-width: 1200px;
    width: 100%;
    background-color: #fff;
    padding: 25px;
    border-radius: 10px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

h1, h2 {
    text-align: center;
    margin-bottom: 25px;
    color: #333;
}

label {
    display: block;
    margin-bottom: 8px;
    font-weight: bold;
    color: #444;
}

input[type="file"], input[type="text"] {
    display: block;
    margin-bottom: 20px;
    padding: 12px;
    border: 1px solid #ccc;
    border-radius: 6px;
    width: 100%;
    box-sizing: border-box;
    font-size: 1rem;
}

input[type="file"]:focus, input[type="text"]:focus {
    border-color: #007bff;
    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
    outline: none;
}

/* Style for the Random Generate button */
#randomButton {
    padding: 10px 18px;
    font-size: 0.95em;
    font-weight: 500;
    border: 1px solid #17a2b8; /* Teal color */
    background-color: #17a2b8;
    color: white;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.2s ease, border-color 0.2s ease;
    margin-bottom: 20px; /* Add some space below */
}
#randomButton:hover { background-color: #138496; border-color: #117a8b; }

#status, #loading, #error {
    margin-top: 20px;
    padding: 12px;
    border-radius: 6px;
    font-size: 1em;
    text-align: center;
}

#status { background-color: #e9ecef; color: #495057; }
#loading { color: #fff; background-color: #007bff; display: none; }
#error { color: #fff; background-color: #dc3545; display: none; font-weight: bold; }

#mainContent {
    display: flex;
    flex-direction: column; /* Default for smaller screens */
    gap: 30px;
    /* Add align-items to help sticky positioning */
    align-items: flex-start;
}

#displayArea {
    flex: 1;
    min-width: 0;
    /* --- 追加 --- */
    /* 画面の高さの半分程度の余白を追加して、
       タブが設定パネル上端に来るまでスクロールできるようにする */
    padding-bottom: 60vh; /* 60vhはビューポート高さの60%。この値は調整可能 */
    /* --- 追加終わり --- */
}

#settingsPanel {
    border: 1px solid #e0e0e0;
    background-color: #fdfdfd;
    padding: 25px;
    border-radius: 8px;
    /* --- Add Sticky Positioning --- */
    position: sticky;
    /* Adjust top offset as needed */
    top: 20px;
    /* Allow panel to scroll internally if its content exceeds viewport height */
    /* max-height: calc(100vh - 40px); /* Example: viewport height minus top/bottom margins */
    /* overflow-y: auto; */
    /* --- End Sticky Positioning --- */
}

@media (min-width: 900px) {
    #mainContent {
        flex-direction: row; /* Switch to row layout */
        align-items: flex-start; /* Keep alignment */
     }
    #displayArea { flex: 2; }
    #settingsPanel {
        flex: 1;
        max-width: 350px;
        /* Sticky position properties remain active */
        position: sticky;
        top: 20px;
    }
}

#sourceImageContainer {
    text-align: center;
    margin-bottom: 15px;
    background-color: #f8f9fa;
    padding: 10px;
    border-radius: 6px;
    border: 1px solid #dee2e6;
    min-height: 100px;
    display: flex;
    justify-content: center;
    align-items: center;
}

#sourceImage {
    max-width: 100%;
    max-height: 350px;
    display: block;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
    border: none;
    border-radius: 4px;
}
#sourceImage.loaded { opacity: 1; }

#qrResult {
    margin-top: 15px;
    font-weight: 500;
    word-break: break-all;
    background-color: #e2e3e5;
    padding: 12px;
    border-radius: 6px;
    font-size: 0.95em;
    text-align: left;
    line-height: 1.5;
    /* display: none; */ /* JavaScript側で制御するためコメントアウトまたは削除してもOK */
    /* --- 追加 --- */
    max-height: 100px; /* 例: 最大高さを100pxに設定 */
    overflow-y: auto; /* 内容がはみ出たらスクロールバーを表示 */
    /* --- 追加終わり --- */
    display: none; /* ここで非表示を確定 */
}
#qrResult::before { content: "読み取り結果: "; font-weight: bold; color: #333; }

#colorSelector {
    display: flex;
    flex-wrap: wrap;
    gap: 12px;
    margin-bottom: 25px;
    padding: 10px 0;
}

.color-option {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    cursor: pointer;
    border: 4px solid #fdfdfd;
    box-sizing: border-box;
    transition: border-color 0.2s ease, transform 0.2s ease, box-shadow 0.2s ease;
    display: inline-block;
    position: relative;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
}
.color-option:hover { transform: scale(1.1); box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); }
.color-option.selected { border-color: #007bff; transform: scale(1.05); box-shadow: 0 3px 6px rgba(0, 0, 0, 0.2); }
.color-option.selected::after { content: '✔'; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); color: white; font-size: 18px; font-weight: bold; text-shadow: 0 0 3px rgba(0, 0, 0, 0.7); }
.color-option[data-color="#FFFFFF"].selected::after,
.color-option[data-color="#FFFF00"].selected::after,
.color-option[data-color="#00FFFF"].selected::after { color: #333; text-shadow: none; }

#qrCodeContainer {
    margin-top: 25px;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    overflow: hidden;
    background-color: #fff;
    display: none;
}

.tab-nav {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    background-color: #f8f9fa;
    border-bottom: 1px solid #dee2e6;
    flex-wrap: wrap;
}

.tab-nav li {
    padding: 12px 18px;
    cursor: pointer;
    border-right: 1px solid #dee2e6;
    background-color: transparent;
    transition: background-color 0.2s ease, color 0.2s ease;
    white-space: nowrap;
    color: #495057;
    font-weight: 500;
}
.tab-nav li:last-child { border-right: none; }
.tab-nav li:hover { background-color: #e9ecef; color: #000; }
.tab-nav li.active {
    background-color: #fff;
    border-bottom: 1px solid #fff;
    font-weight: bold;
    color: #007bff;
    position: relative;
    top: 1px;
}

.tab-content {
    display: none;
    padding: 30px;
    background-color: #fff;
    text-align: center;
}
.tab-content.active { display: block; }

/* --- QR Wrapper Style --- */
.qr-wrapper {
    position: relative;
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 348px;
    aspect-ratio: 1 / 1;
    padding: 16px;
    background-color: var(--current-border-color, #000); /* Use CSS variable */
    border-radius: 0;
    margin: 0 auto;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    border: 1px solid #aaaaaa;
    box-sizing: border-box;
    overflow: hidden;
}

/* Inner white background + gray border */
.qr-wrapper::before {
    content: '';
    position: absolute;
    top: 24px; left: 24px; right: 24px; bottom: 24px;
    background-color: #fff;
    border-radius: 15px;
    border: 1px solid #cccccc;
    box-sizing: border-box;
    z-index: 0;
}


/* --- Updated Text Styles --- */
.qr-text {
    font-size: 15px;
    font-weight: 600;
    /*width: 100%;
    max-width: calc(100% - 10px); *//* 端に行き過ぎないように調整 */
    line-height: 1.3;
    /* z-indexを追加してテキストがQRコードの上にくるように念のため指定 */
    position: relative; /* z-indexを有効にするため */
    z-index: 2;         /* QRコード本体より手前に表示 */
}
/* .qr-text-top のスタイル (width/max-widthがないことを確認) */
.qr-text-top {
    min-height: 1.2em;
    font-size: 17px;
    font-weight: 900;
    color: #000000;
    text-align: center;
    margin-bottom: -4px;
    margin-top: 4px;
    text-shadow:
        /* 1. 内側の白い縁取り (例: 2px オフセット) */
        -1px -1px 0 #fdfdfd,
         1px -1px 0 #fdfdfd,
        -1px  1px 0 #fdfdfd,
         1px  1px 0 #fdfdfd,
         -1.5px -1.5px 0 #f0f0f0,
         1.5px -1.5px 0 #f0f0f0,
        -1.5px  1.5px 0 #f0f0f0,
         1.5px  1.5px 0 #f0f0f0;

    background-color: var(--current-border-color, #000);
    display: inline-block; /* ここは正しい */
    padding-top: 10px;
    border-radius:4px;
    /* width や max-width は指定されていないことを確認 */
}


.qr-text-bottom {
    color: #555555;
    text-align: right;
    width: 100%;
    max-width: calc(100% - 10px);
    /* margin-top: 8px; */     /* 変更前 */
    margin-top: -14px;      /* 変更後: 負のマージンでQRコードに近づける */
    margin-bottom: 18px;   /* 枠の下端からの距離は維持 */
    min-height: 1.4em;
    padding-right: 16px;
    text-shadow: none;
}

/* QRコード本体のスタイルも確認 (z-indexをテキストより低くする) */
.qr-code-itself {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 286px;
    height: 286px;
    padding: 15px;
    position: relative; /* z-indexを有効にするため */
    z-index: 1;         /* テキストより奥に表示 */
}
.qr-code-itself > canvas,
.qr-code-itself > img {
    display: block;
    width: 256px !important;
    height: 256px !important;
    /* position: relative; */ /* 不要かも */
    /* z-index: 2; */       /* 親要素で制御するのでここは低くても良い */
}
.qr-code-itself p { padding: 20px; margin: 0; line-height: 1.5; font-size: 0.9em; color: #555; position: relative; z-index: 1; }
.qr-code-itself p strong { color: red; }
.qr-code-itself p code { background-color: #eee; padding: 2px 4px; border-radius: 3px; font-family: monospace; font-size: 0.95em; }


/* --- Button Styles --- */
.qr-actions { margin-top: 20px; display: flex; justify-content: center; gap: 15px; flex-wrap: wrap; }
.qr-actions button { padding: 10px 18px; font-size: 0.95em; font-weight: 500; border: 1px solid #007bff; background-color: #007bff; color: white; border-radius: 5px; cursor: pointer; transition: background-color 0.2s ease, border-color 0.2s ease, opacity 0.2s ease; min-width: 120px; text-align: center; }
.qr-actions button:hover { background-color: #0056b3; border-color: #0056b3; }
.qr-actions button:active { background-color: #004085; border-color: #00376e; }
.qr-actions button.processing, .qr-actions button.copied { background-color: #28a745; border-color: #28a745; cursor: default; }
.qr-actions button.processing { background-color: #ffc107; border-color: #ffc107; color: #333; }
.qr-actions button:disabled { background-color: #6c757d; border-color: #6c757d; opacity: 0.65; cursor: not-allowed; }

#qrTabInstruction {
    font-weight: bold; /* ラベルと同じ太さ */
    color: #444;      /* ラベルと同じ色 */
    margin-bottom: 8px; /* タブとの間に少しマージン */
    /* display: none; はHTML側で指定済み(JSで制御) */
}
/* --- Password Modal Styles --- */
.password-modal {
    position: fixed; /* or absolute */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(240, 240, 240, 0.95); /* 少し透明な白背景 */
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000; /* 最前面に */
    padding: 20px;
    box-sizing: border-box;
}

.password-modal-content {
    background-color: #fff;
    padding: 30px 40px;
    border-radius: 8px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    text-align: center;
    width: 100%;
    max-width: 350px; /* モーダルの最大幅 */
}

.password-modal-content h2 {
    margin-top: 0;
    margin-bottom: 25px;
    color: #333;
    font-size: 1.4em;
}

.password-modal-content input[type="password"] {
    display: block;
    width: 100%;
    padding: 12px;
    margin-bottom: 20px;
    border: 1px solid #ccc;
    border-radius: 6px;
    box-sizing: border-box;
    font-size: 1rem;
}

.password-modal-content button {
    padding: 12px 25px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 500;
    transition: background-color 0.2s ease;
    width: 100%; /* ボタン幅を広げる */
}

.password-modal-content button:hover {
    background-color: #0056b3;
}

.password-error {
    margin-top: 15px;
    color: #dc3545; /* Bootstrapのdanger色 */
    font-weight: bold;
    min-height: 1.2em; /* エラー表示用のスペース確保 */
    font-size: 0.9em;
}